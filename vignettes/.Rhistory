                                                                                                                                                                                                                                            
    # Subset transcription info for pCSC group                                                                                                                                                                                              
    pCSC_group_pos <- NULL                                                                                                                                                                                                                  
    pCSC_group_pos <- NSCLC_pCSC_groups_to_run[[r]][[2]]                                                                                                                                                                                    
    this_patient_tumour_only_positions <- NSCLC_pCSC_groups_to_run[[r]][[4]]                                                                                                                                                                
                                                                                                                                                                                                                                            
    # Generate graphs                                                                                                                                                                                                                       
    NSCLC_all_results_ranks_list[[r]] <- print_preferential_expression_bar_graphs(                                                                                                                                                          
        pCSC_group_name                    <- this_pCSC_group_name,                                                                                                                                                                         
        pCSC_group_positions               <- pCSC_group_pos,                                                                                                                                                                               
        HUGO_groups_sets_of_columnNumbers  <- gene_group_positions_to_use,                                                                                                                                                                  
        tExprMatr                          <- expression_matrix,                                                                                                                                                                            
        tumour_only_positions              <- NSCLC_45000_tumour_only_positions,                                                                                                                                                            
        this_patient_tumour_only_positions,                                                                                                                                                                                                 
        outDir,                                                                                                                                                                                                                             
        tissue_type,                                                                                                                                                                                                                        
        family_type_name                   <- 'HUGO',                                                                                                                                                                                       
        patient_source_name                <- this_sample_name,                                                                                                                                                                             
        frag_count_method,                                                                                                                                                                                                                  
        no_ribo,                                                                                                                                                                                                                            
        separate_row_for_high_expression_transcripts,                                                                                                                                                                                       
        number_of_graph_rows_stacked_transcripts <- 2,                                                                                                                                                                                      
        number_of_graph_rows_stacked_families <- 2,                                                                                                                                                                                         
        all_HUGO_abbreviations_and_fullnames,                                                                                                                                                                                               
        dataDir                                                                                                                                                                                                                             
    )                                                                                                                                                                                                                                       
    names(NSCLC_all_results_ranks_list)[[r]] <- this_pCSC_group_name                                                                                                                                                                        
}                                                                                                                                                                                                                                           
                                                                                                                                                                                                                                          
pCSC_group_name                    <- this_pCSC_group_name                                                                                                                                                                                  
pCSC_group_positions               <- pCSC_group_pos                                                                                                                                                                                        
HUGO_groups_sets_of_columnNumbers  <- gene_group_positions_to_use                                                                                                                                                                           
tExprMatr                          <- expression_matrix                                                                                                                                                                                     
tumour_only_positions              <- NSCLC_45000_tumour_only_positions                                                                                                                                                                     
#this_patient_tumour_only_positions                                                                                                                                                                                                         
#outDir                                                                                                                                                                                                                                     
#tissue_type                                                                                                                                                                                                                                
family_type_name                   <- 'HUGO'                                                                                                                                                                                                
patient_source_name                <- this_sample_name                                                                                                                                                                                      
#frag_count_method                                                                                                                                                                                                                          
#no_ribo                                                                                                                                                                                                                                    
#separate_row_for_high_expression_transcripts                                                                                                                                                                                               
number_of_graph_rows_stacked_transcripts <- 2                                                                                                                                                                                               
number_of_graph_rows_stacked_families <- 2                                                                                                                                                                                                  
                                                                                                                                                                                                                             
    if(is.null(no_ribo)){                                                                                                                                                                                                    
        no_ribo <- FALSE                                                                                                                                                                                                     
    }                                                                                                                                                                                                                        
    if(is.null(separate_row_for_high_expression_transcripts)){                                                                                                                                                               
        separate_row_for_high_expression_transcripts <- TRUE                                                                                                                                                                 
    }                                                                                                                                                                                                                        
    if(!is.null(this_patient_tumour_only_positions)){                                                                                                                                                                        
        if(length(this_patient_tumour_only_positions) == 1){                                                                                                                                                                 
            if(this_patient_tumour_only_positions == ''){                                                                                                                                                                    
                this_patient_tumour_only_positions <- NULL                                                                                                                                                                   
            }                                                                                                                                                                                                                
        }                                                                                                                                                                                                                    
    }                                                                                                                                                                                                                        
                                                                                                                                                                                                                             
    #cat(paste0("Output directory = '", outDir, "preferential_expression/'\n"))                                                                                                                                              
    cat(paste0("Output directory = '", outDir, "'\n"))                                                                                                                                                                       
                                                                                                                                                                                                                             
    ## RANKINGS ##########                                                                                                                                                                                                   
                                                                                                                                                                                                                             
    #1) STACKED BARCHARTS FOR SINGLE TRANSCRIPTS - rank top 100 transcripts                                                                                                                                                  
    #2) STACKED FAMILY EXPRESSION BARCHART SINGLE BARS - rank top 100 families                                                                                                                                               
    #3)                                                - also rank by each transcript's share of top family rank (top family occurrence only)                                                                                
                                                                                                                                                                                                                             
    ranks1_STACKED_BARCHARTS_FOR_SINGLE_TRANSCRIPTS                                                                        <- NULL                                                                                           
    ranks2_STACKED_FAMILY_EXPRESSION_BARCHART_SINGLE_BARS__FAMILIES                                                        <- NULL                                                                                           
    printTripletSingleTranscriptBarcharts(tExprMatr,                                                                                                                                                                         
                                          pCSC_group_positions,                                                                                                                                                              
                                          tumour_only_positions,                                                                                                                                                             
                                          pCSC_group_name,                                                                                                                                                                   
                                          outDir,                                                                                                                                                                            
                                          tissue_type,                                                                                                                                                                       
                                          family_type_name,                                                                                                                                                                  
                                          patient_source_name,                                                                                                                                                               
                                          no_ribo <- TRUE,                                                                                                                                                                   
                                          number_of_transcripts_to_show <- 100,                                                                                                                                              
                                          HUGO_abbreviations_and_fullnames,                                                                                                                                                  
                                          HUGOFullNameFilesDir)                                                                                                                                                              
HUGO_abbreviations_and_fullnames <- all_HUGO_abbreviations_and_fullnames                                                                                                                                                                    
    printTripletSingleTranscriptBarcharts(tExprMatr,                                                                                                                                                                         
                                          pCSC_group_positions,                                                                                                                                                              
                                          tumour_only_positions,                                                                                                                                                             
                                          pCSC_group_name,                                                                                                                                                                   
                                          outDir,                                                                                                                                                                            
                                          tissue_type,                                                                                                                                                                       
                                          family_type_name,                                                                                                                                                                  
                                          patient_source_name,                                                                                                                                                               
                                          no_ribo <- TRUE,                                                                                                                                                                   
                                          number_of_transcripts_to_show <- 100,                                                                                                                                              
                                          HUGO_abbreviations_and_fullnames,                                                                                                                                                  
                                          HUGOFullNameFilesDir)                                                                                                                                                              
HUGOFullNameFilesDir <- dataDir                                                                                                                                                                                                             
    printTripletSingleTranscriptBarcharts(tExprMatr,                                                                                                                                                                         
                                          pCSC_group_positions,                                                                                                                                                              
                                          tumour_only_positions,                                                                                                                                                             
                                          pCSC_group_name,                                                                                                                                                                   
                                          outDir,                                                                                                                                                                            
                                          tissue_type,                                                                                                                                                                       
                                          family_type_name,                                                                                                                                                                  
                                          patient_source_name,                                                                                                                                                               
                                          no_ribo <- TRUE,                                                                                                                                                                   
                                          number_of_transcripts_to_show <- 100,                                                                                                                                              
                                          HUGO_abbreviations_and_fullnames,                                                                                                                                                  
                                          HUGOFullNameFilesDir)                                                                                                                                                              
    printBarchartSingleTranscriptNoStacking(tExprMatr,                                                                                                                                                                       
                                            pCSC_group_positions,                                                                                                                                                            
                                            pCSC_group_name,                                                                                                                                                                 
                                            outDir,                                                                                                                                                                          
                                            tissue_type,                                                                                                                                                                     
                                            family_type_name,                                                                                                                                                                
                                            patient_source_name,                                                                                                                                                             
                                            no_ribo <- TRUE,                                                                                                                                                                 
                                            number_of_transcripts_to_show <- 100,                                                                                                                                            
                                            HUGO_abbreviations_and_fullnames,                                                                                                                                                
                                            HUGOFullNameFilesDir)                                                                                                                                                            
    ranks1_STACKED_BARCHARTS_FOR_SINGLE_TRANSCRIPTS <- stackedBarchartsForSingleTranscripts(tExprMatr,                                                                                                                       
                                                                                            pCSC_group_positions,                                                                                                            
                                                                                            tumour_only_positions,                                                                                                           
                                                                                            this_patient_tumour_only_positions,                                                                                              
                                                                                            pCSC_group_name,                                                                                                                 
                                                                                            tissue_type,                                                                                                                     
                                                                                            family_type_name,                                                                                                                
                                                                                            patient_source_name,                                                                                                             
                                                                                            separate_row_for_high_expression_transcripts,                                                                                    
                                                                                            no_ribo,                                                                                                                         
                                                                                            max_number_of_graph_rows_stacked_transcripts,                                                                                    
                                                                                            HUGO_abbreviations_and_fullnames,                                                                                                
                                                                                            HUGOFullNameFilesDir)                                                                                                            
max_number_of_graph_rows_stacked_transcripts <- 2                                                                                                                                                                                           
max_number_of_graph_rows_stacked_families <- 2                                                                                                                                                                                              
    ranks1_STACKED_BARCHARTS_FOR_SINGLE_TRANSCRIPTS <- stackedBarchartsForSingleTranscripts(tExprMatr,                                                                                                                       
                                                                                            pCSC_group_positions,                                                                                                            
                                                                                            tumour_only_positions,                                                                                                           
                                                                                            this_patient_tumour_only_positions,                                                                                              
                                                                                            pCSC_group_name,                                                                                                                 
                                                                                            tissue_type,                                                                                                                     
                                                                                            family_type_name,                                                                                                                
                                                                                            patient_source_name,                                                                                                             
                                                                                            separate_row_for_high_expression_transcripts,                                                                                    
                                                                                            no_ribo,                                                                                                                         
                                                                                            max_number_of_graph_rows_stacked_transcripts,                                                                                    
                                                                                            HUGO_abbreviations_and_fullnames,                                                                                                
                                                                                            HUGOFullNameFilesDir)                                                                                                            
    family_ranks <- stackedFamilyExpressionBarchartSingleBars(tExprMatr,                                                                                                                                                     
                                                              pCSC_group_positions,                                                                                                                                          
                                                              tumour_only_positions,                                                                                                                                         
                                                              this_patient_tumour_only_positions,                                                                                                                            
                                                              HUGO_groups_sets_of_columnNumbers,                                                                                                                             
                                                              pCSC_group_name,                                                                                                                                               
                                                              outDir,                                                                                                                                                        
                                                              tissue_type,                                                                                                                                                   
                                                              family_type_name,                                                                                                                                              
                                                              patient_source_name,                                                                                                                                           
                                                              frag_count_method,                                                                                                                                             
                                                              separate_row_for_high_expression_transcripts,                                                                                                                  
                                                              max_number_of_graph_rows_stacked_families)                                                                                                                     
HUGO_groups_sets_of_columnNumbers
    family_ranks <- stackedFamilyExpressionBarchartSingleBars(tExprMatr,                                                                                                                                                     
                                                              pCSC_group_positions,                                                                                                                                          
                                                              tumour_only_positions,                                                                                                                                         
                                                              this_patient_tumour_only_positions,                                                                                                                            
                                                              HUGO_groups_sets_of_columnNumbers,                                                                                                                             
                                                              pCSC_group_name,                                                                                                                                               
                                                              outDir,                                                                                                                                                        
                                                              tissue_type,                                                                                                                                                   
                                                              family_type_name,                                                                                                                                              
                                                              patient_source_name,                                                                                                                                           
                                                              frag_count_method,                                                                                                                                             
                                                              separate_row_for_high_expression_transcripts,                                                                                                                  
                                                              max_number_of_graph_rows_stacked_families)                                                                                                                     
manually_set_max_number_of_graph_rows <- max_number_of_graph_rows_stacked_families                                                                                                                                          
    if(is.null(separate_row_for_high_expression_transcripts)){                                                                                                                                                               
        separate_row_for_high_expression_transcripts <- FALSE                                                                                                                                                                
    }                                                                                                                                                                                                                        
    if(!is.null(this_patient_tumour_only_positions)){                                                                                                                                                                        
        if(length(this_patient_tumour_only_positions) == 1){                                                                                                                                                                 
            if(this_patient_tumour_only_positions == ''){                                                                                                                                                                    
                this_patient_tumour_only_positions <- NULL                                                                                                                                                                   
            }                                                                                                                                                                                                                
        }                                                                                                                                                                                                                    
    }                                                                                                                                                                                                                        
                                                                                                                                                                                                                             
                                                                                                                                                                                                                           
    columnNumbers <- 1:ncol(tExprMatr)                                                                                                                                                                                       
    numberOfColumns <- length(columnNumbers)                                                                                                                                                                                 
                                                                                                                                                                                                                             
    all_transcript_names <- colnames(tExprMatr)                                                                                                                                                                              
    HUGO_column_groups_names <- names(HUGO_groups_sets_of_columnNumbers)                                                                                                                                                     
                                                                                                                                                                                                                             
    pCSCs_tExprMatr                    <- tExprMatr[pCSC_group_positions,]                                                                                                                                                   
    tumour_only_tExprMatr              <- tExprMatr[tumour_only_positions,]                                                                                                                                                  
    if(length(this_patient_tumour_only_positions) > 0){                                                                                                                                                                      
        this_patient_tumour_only_tExprMatr <- tExprMatr[this_patient_tumour_only_positions,]                                                                                                                                 
    }                                                                                                                                                                                                                        
                                                                                                                                                                                                                             
    all_samples_tumour_only_column_mean <- colMeans(tExprMatr[tumour_only_positions,])                                                                                                                                       
    all_samples_column_mean             <- colMeans(tExprMatr)                                                                                                                                                               
                                                                                                                                                                                                                             
    pCSC_group_tExprMatr_col_means              <- colMeans(tExprMatr[pCSC_group_positions, , drop = FALSE])                                                                                                                 
    pCSC_group_column_mean                      <- pCSC_group_tExprMatr_col_means[columnNumbers]                                                                                                                             
                                                                                                                                                                                                                             
    all_transcripts_pCSC_group_expression_mean  <- round(sum(pCSC_group_column_mean)/numberOfColumns, 2)                                                                                                                     
    all_transcripts_tumour_only_expression_mean <- round(sum(all_samples_tumour_only_column_mean)/numberOfColumns, 2)                                                                                                        
    all_transcripts_all_samples_expression_mean <- round(sum(all_samples_column_mean)/numberOfColumns, 2)                                                                                                                    
                                                                                                                                                                                                                         
    pCSC_group_average_expression_across_each_family                         <- vector()                                                                                                                                     
    pCSC_group_average_expression_each_family_transcript_list                <- list()                                                                                                                                       
    pCSC_group_average_expression_each_family_transcript_percentage_max_list <- list()                                                                                                                                       
                                                                                                                                                                                                                             
    tumour_only_total_expression_across_each_family   <- vector()                                                                                                                                                            
    tumour_only_average_expression_across_each_family <- vector()                                                                                                                                                            
                                                                                                                                                                                                                             
    this_patient_tumour_only_average_expression_across_each_family <- vector()                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                                 
    all_samples_all_cells_total_expression_across_each_family   <- vector()                                                                                                                                                                                                                      
    all_samples_all_cells_average_expression_across_each_family <- vector()                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                                 
    # Collect info for each HUGO gene group (for gene family expression DF, pCS group subset, tumour only subset, this patient tumour only):                                                                                                                                                     
    #   - average_expression_across_this_family                  = average expression for all matrix cells of family expression DF and subsets of it i.e. pCSC cells subset, tumour only subset, this patient tumour only                                                                        
    #   - average_expression_this_family_transcripts             = average expression over each matrix column (gene) for family expression DF and subsets of it                                                                                                                                  
    #   - average_expression_this_family_transcripts_percentages = percentage (for each transcript) of sum of average_expression_this_family_transcripts for this family                                                                                                                         
    #   - total_expression_across_this_family                    = sum of family expression DF                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                                 
    for(k in 1:length(HUGO_groups_sets_of_columnNumbers)){ #  each transcript family i.e. HUGO gene group                                                                                                                                                                                        
        if(length(HUGO_groups_sets_of_columnNumbers[[k]]) == 1){                                                                                                                                                                                                                                 
            cat("Too few columns\n")                                                                                                                                                                                                                                                             
        }                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                 
        ## numberOfCols == number of transcripts in this gene group                                                                                                                                                                                                                              
        numberOfCols <- length(HUGO_groups_sets_of_columnNumbers[[k]])                                                                                                                                                                                                                           
                                                                                                                                                                                                                                                                                                 
        pCSC_group_average_expression_across_this_family <- round(((sum(pCSCs_tExprMatr[, HUGO_groups_sets_of_columnNumbers[[k]]])) / (length(pCSC_group_positions) * numberOfCols)), 2)                                                                                                         
        pCSC_group_average_expression_this_family_transcripts <- vector()                                                                                                                                                                                                                        
        pCSC_group_average_expression_this_family_transcripts <- colSums(pCSCs_tExprMatr[, HUGO_groups_sets_of_columnNumbers[[k]]]) / nrow(pCSCs_tExprMatr)                                                                                                                                      
        pCSC_group_average_expression_this_family_transcripts_sum <- sum(pCSC_group_average_expression_this_family_transcripts)                                                                                                                                                                  
        if(pCSC_group_average_expression_this_family_transcripts_sum == 0){                                                                                                                                                                                                                      
            pCSC_group_average_expression_this_family_transcripts_percentages_max <- 0                                                                                                                                                                                                           
        } else {                                                                                                                                                                                                                                                                                 
            pCSC_group_average_expression_this_family_transcripts_percentages <- 100 * (pCSC_group_average_expression_this_family_transcripts / pCSC_group_average_expression_this_family_transcripts_sum)                                                                                       
            pCSC_group_average_expression_this_family_transcripts_percentages_max <- max(pCSC_group_average_expression_this_family_transcripts_percentages)                                                                                                                                      
        }                                                                                                                                                                                                                                                                                        
        pCSC_group_average_expression_each_family_transcript_percentage_max_list[k] <- pCSC_group_average_expression_this_family_transcripts_percentages_max                                                                                                                                     
        names(pCSC_group_average_expression_each_family_transcript_percentage_max_list)[k] <- names(HUGO_groups_sets_of_columnNumbers)[k]                                                                                                                                                        
                                                                                                                                                                                                                                                                                                 
        tumour_only_total_expression_across_this_family   <- sum(tumour_only_tExprMatr[, HUGO_groups_sets_of_columnNumbers[[k]]])                                                                                                                                                                
        tumour_only_average_expression_across_this_family <- round(((sum(tumour_only_tExprMatr[, HUGO_groups_sets_of_columnNumbers[[k]]])) / (nrow(tumour_only_tExprMatr) * numberOfCols)), 2)                                                                                                   
                                                                                                                                                                                                                                                                                                 
        if(length(this_patient_tumour_only_positions) > 0){                                                                                                                                                                                                                                      
            this_patient_tumour_only_total_expression_across_this_family   <- sum(this_patient_tumour_only_tExprMatr[, HUGO_groups_sets_of_columnNumbers[[k]]])                                                                                                                                  
            this_patient_tumour_only_average_expression_across_this_family <- round(((sum(this_patient_tumour_only_tExprMatr[, HUGO_groups_sets_of_columnNumbers[[k]]])) / (nrow(this_patient_tumour_only_tExprMatr) * numberOfCols)), 2)                                                        
        }                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                 
        all_cells_total_expression_across_this_family   <-         sum(tExprMatr[, HUGO_groups_sets_of_columnNumbers[[k]]])                                                                                                                                                                      
        all_cells_average_expression_across_this_family <- round(((sum(tExprMatr[, HUGO_groups_sets_of_columnNumbers[[k]]])) / (nrow(tExprMatr) * numberOfCols)), 2)                                                                                                                             
                                                                                                                                                                                                                                                                                                 
        pCSC_group_average_expression_across_each_family[[k]]        <- pCSC_group_average_expression_across_this_family                                                                                                                                                                         
        names(pCSC_group_average_expression_across_each_family[[k]]) <- HUGO_column_groups_names[k]                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                                 
        pCSC_group_average_expression_each_family_transcript_list[[k]]      <- pCSC_group_average_expression_this_family_transcripts                                                                                                                                                             
        names(pCSC_group_average_expression_each_family_transcript_list)[k] <- HUGO_column_groups_names[k]                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                                 
        tumour_only_total_expression_across_each_family[[k]]   <- tumour_only_total_expression_across_this_family                                                                                                                                                                                
        tumour_only_average_expression_across_each_family[[k]] <- tumour_only_average_expression_across_this_family                                                                                                                                                                              
        names(tumour_only_total_expression_across_each_family[[k]])   <- HUGO_column_groups_names[k]                                                                                                                                                                                             
        names(tumour_only_average_expression_across_each_family[[k]]) <- HUGO_column_groups_names[k]                                                                                                                                                                                             
                                                                                                                                                                                                                                                                                                 
        if(length(this_patient_tumour_only_positions) > 0){                                                                                                                                                                                                                                      
            #this_patient_tumour_only_total_expression_across_each_family[[k]]          <- this_patient_tumour_only_total_expression_across_this_family                                                                                                                                          
            this_patient_tumour_only_average_expression_across_each_family[[k]]        <- this_patient_tumour_only_average_expression_across_this_family                                                                                                                                         
            #names(this_patient_tumour_only_total_expression_across_each_family[[k]])   <- HUGO_column_groups_names[k]                                                                                                                                                                           
            names(this_patient_tumour_only_average_expression_across_each_family[[k]]) <- HUGO_column_groups_names[k]                                                                                                                                                                            
        }                                                                                                                                                                                                                                                                                        
        all_samples_all_cells_total_expression_across_each_family[[k]]   <- all_cells_total_expression_across_this_family                                                                                                                                                                        
        all_samples_all_cells_average_expression_across_each_family[[k]] <- all_cells_average_expression_across_this_family                                                                                                                                                                      
        names(all_samples_all_cells_total_expression_across_each_family[[k]])   <- HUGO_column_groups_names[k]                                                                                                                                                                                   
        names(all_samples_all_cells_average_expression_across_each_family[[k]]) <- HUGO_column_groups_names[k]                                                                                                                                                                                   
    }                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                 
    pCSC_group_all_cells_list_total_expression_across_each_family   <- list()                                                                                                                                                                                                                    
    pCSC_group_all_cells_list_average_expression_across_each_family <- list()                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                 
    ## Collect expression info for gene groups for individual cells:                                                                                                                                                                                                                             
    ##   - total family expression                                                                                                                                                                                                                                                               
    ##   - average family expression                                                                                                                                                                                                                                                             
    for(l in 1:length(pCSC_group_positions)){                                                                                                                                                                                                                                                    
        #l <- 1                                                                                                                                                                                                                                                                                  
        this_pCSC_group_position <- pCSC_group_positions[l]                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                                 
        this_cell_total_expression_across_each_family   <- vector()                                                                                                                                                                                                                              
        this_cell_average_expression_across_each_family <- vector()                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                                 
        for(m in 1:length(HUGO_groups_sets_of_columnNumbers)){ # each transcript family                                                                                                                                                                                                          
            #m <- 1                                                                                                                                                                                                                                                                              
            numberOfCols <- length(HUGO_groups_sets_of_columnNumbers[[m]])                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_this_family    <- NULL                                                                                                                                                                                                                             
            this_cell_average_expression_across_this_family  <- NULL                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_this_family    <- sum(tExprMatr[this_pCSC_group_position, HUGO_groups_sets_of_columnNumbers[[m]]])                                                                                                                                                 
            this_cell_average_expression_across_this_family  <- round(((this_cell_total_expression_across_this_family) / numberOfCols), 2)                                                                                                                                                       
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_each_family[[m]]   <- this_cell_total_expression_across_this_family                                                                                                                                                                                
            this_cell_average_expression_across_each_family[[m]] <- this_cell_average_expression_across_this_family                                                                                                                                                                              
            names(this_cell_total_expression_across_each_family[[m]])   <- HUGO_column_groups_names[m]                                                                                                                                                                                           
            names(this_cell_average_expression_across_each_family[[m]]) <- HUGO_column_groups_names[m]                                                                                                                                                                                           
        }                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                 
        pCSC_group_all_cells_list_total_expression_across_each_family[[l]]   <- this_cell_total_expression_across_each_family                                                                                                                                                                    
        pCSC_group_all_cells_list_average_expression_across_each_family[[l]] <- this_cell_average_expression_across_each_family                                                                                                                                                                  
    }                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                 
    for(l in 1:length(pCSC_group_positions)){                                                                                                                                                                                                                                                    
        #l <- 1                                                                                                                                                                                                                                                                                  
        this_pCSC_group_position <- pCSC_group_positions[l]                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                                 
        this_cell_total_expression_across_each_family   <- vector()                                                                                                                                                                                                                              
        this_cell_average_expression_across_each_family <- vector()                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                                 
        for(m in 1:length(HUGO_groups_sets_of_columnNumbers)){ # each transcript family                                                                                                                                                                                                          
            #m <- 1                                                                                                                                                                                                                                                                              
            numberOfCols <- length(HUGO_groups_sets_of_columnNumbers[[m]])                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_this_family    <- NULL                                                                                                                                                                                                                             
            this_cell_average_expression_across_this_family  <- NULL                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_this_family    <- sum(tExprMatr[this_pCSC_group_position, HUGO_groups_sets_of_columnNumbers[[m]]])                                                                                                                                                 
            this_cell_average_expression_across_this_family  <- round(((this_cell_total_expression_across_this_family) / numberOfCols), 2)                                                                                                                                                       
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_each_family[[m]]   <- this_cell_total_expression_across_this_family                                                                                                                                                                                
            this_cell_average_expression_across_each_family[[m]] <- this_cell_average_expression_across_this_family                                                                                                                                                                              
            names(this_cell_total_expression_across_each_family[[m]])   <- HUGO_column_groups_names[m]                                                                                                                                                                                           
            names(this_cell_average_expression_across_each_family[[m]]) <- HUGO_column_groups_names[m]                                                                                                                                                                                           
        }                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                 
        pCSC_group_all_cells_list_total_expression_across_each_family[[l]]   <- this_cell_total_expression_across_each_family                                                                                                                                                                    
        pCSC_group_all_cells_list_average_expression_across_each_family[[l]] <- this_cell_average_expression_across_each_family                                                                                                                                                                  
    }                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                 
l
pCSC_group_positions
l <- 1                                                                                                                                                                                                                                                                                  
        this_pCSC_group_position <- pCSC_group_positions[l]                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                                 
        this_cell_total_expression_across_each_family   <- vector()                                                                                                                                                                                                                              
        this_cell_average_expression_across_each_family <- vector()                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                                 
m <- 1                                                                                                                                                                                                                                                                              
            numberOfCols <- length(HUGO_groups_sets_of_columnNumbers[[m]])                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_this_family    <- NULL                                                                                                                                                                                                                             
            this_cell_average_expression_across_this_family  <- NULL                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_this_family    <- sum(tExprMatr[this_pCSC_group_position, HUGO_groups_sets_of_columnNumbers[[m]]])                                                                                                                                                 
      this_cell_average_expression_across_this_family  <- round(((this_cell_total_expression_across_this_family) / numberOfCols), 2)                                                                                                                                                       
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_each_family[[m]]   <- this_cell_total_expression_across_this_family                                                                                                                                                                                
            this_cell_average_expression_across_each_family[[m]] <- this_cell_average_expression_across_this_family                                                                                                                                                                              
            names(this_cell_total_expression_across_each_family[[m]])   <- HUGO_column_groups_names[m]                                                                                                                                                                                           
            names(this_cell_average_expression_across_each_family[[m]]) <- HUGO_column_groups_names[m]                                                                                                                                                                                           
length(HUGO_groups_sets_of_columnNumbers)
  for(m in 1:length(HUGO_groups_sets_of_columnNumbers)){ # each transcript family                                                                                                                                                                                                          
            #m <- 1                                                                                                                                                                                                                                                                              
            numberOfCols <- length(HUGO_groups_sets_of_columnNumbers[[m]])                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_this_family    <- NULL                                                                                                                                                                                                                             
            this_cell_average_expression_across_this_family  <- NULL                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_this_family    <- sum(tExprMatr[this_pCSC_group_position, HUGO_groups_sets_of_columnNumbers[[m]]])                                                                                                                                                 
            this_cell_average_expression_across_this_family  <- round(((this_cell_total_expression_across_this_family) / numberOfCols), 2)                                                                                                                                                       
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_each_family[[m]]   <- this_cell_total_expression_across_this_family                                                                                                                                                                                
            this_cell_average_expression_across_each_family[[m]] <- this_cell_average_expression_across_this_family                                                                                                                                                                              
            names(this_cell_total_expression_across_each_family[[m]])   <- HUGO_column_groups_names[m]                                                                                                                                                                                           
            names(this_cell_average_expression_across_each_family[[m]]) <- HUGO_column_groups_names[m]                                                                                                                                                                                           
        }                                                                                                                                                                                                                                                                                        
m
 numberOfCols <- length(HUGO_groups_sets_of_columnNumbers[[m]])                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_this_family    <- NULL                                                                                                                                                                                                                             
            this_cell_average_expression_across_this_family  <- NULL                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                                                 
            this_cell_total_expression_across_this_family    <- sum(tExprMatr[this_pCSC_group_position, HUGO_groups_sets_of_columnNumbers[[m]]])                                                                                                                                                 
numberOfCols
HUGO_groups_sets_of_columnNumbers[[m]]
 sum(tExprMatr[this_pCSC_group_position, HUGO_groups_sets_of_columnNumbers[[m]]])
this_pCSC_group_position
pCSC_group_positions
this_pCSC_group_position
dim(tExprMatr)
tExprMatr[1:5,1:5]
this_pCSC_group_position
HUGO_groups_sets_of_columnNumbers[[m]]]
HUGO_groups_sets_of_columnNumbers[[m]]
NSCLC_transcript_names <- colnames(expression_matrix)                                                                                                                                                                                       
                                                                                                                                                                                                                                            
# Create a list of HUGO gene groups, with each group containing the position of each group member in the gene expression matrix columns.                                                                                                    
NSCLC_all_HUGO_groups_positions <- map_gene_positions_to_HUGO_gene_groups(NSCLC_transcript_names, all_HUGO_groups_mordered)                                                                                                                 
save(NSCLC_all_HUGO_groups_positions, file = paste0(saveDir, "NSCLC_all_HUGO_gene_group_positions.RData"))                                                                                                                                  
#load(paste0(saveDir, "NSCLC_all_HUGO_gene_group_positions.RData"))                                                                                                                                                                         
                                                                                                                                                                                                                                            
# Subset to only use HUGO gene groups that have two or more members in the gene expression matrix                                                                                                                                           
NSCLC_all_HUGO_groups_positions_two_or_more <- NSCLC_all_HUGO_groups_positions[which(lengths(NSCLC_all_HUGO_groups_positions) >= 2)]                                                                                                        
gene_group_positions_to_use <- NSCLC_all_HUGO_groups_positions_two_or_more                                                                                                                                                                  
source("../R/print_preferential_expression_bar_graphs.R")                                                                                                                                                                                   
source("../R/get_genes_full_names_fns.R")                                                                                                                                                                                                   
                                                                                                                                                                                                                                            
NSCLC_all_results_ranks_list <- list() # Preferential expression ranked results will be stored in here for further analysis                                                                                                                 
                                                                                                                                                                                                                                            
NSCLC_45000_tumour_only_positions <- NSCLC_45000_tumour_pos                                                                                                                                                                                 
                                                                                                                                                                                                                                            
for(r in 1:length(NSCLC_pCSC_groups_to_run)){                                                                                                                                                                                               
                                                                                                                                                                                                                                            
    this_sample_name     <- NSCLC_pCSC_groups_to_run[[r]][[3]]                                                                                                                                                                              
    this_pCSC_group_name <- NSCLC_pCSC_groups_to_run[[r]][[1]]                                                                                                                                                                              
    cat(paste0(this_pCSC_group_name, "; ", this_sample_name, "\n"))                                                                                                                                                                         
                                                                                                                                                                                                                                            
    # Subset transcription info for pCSC group                                                                                                                                                                                              
    pCSC_group_pos <- NULL                                                                                                                                                                                                                  
    pCSC_group_pos <- NSCLC_pCSC_groups_to_run[[r]][[2]]                                                                                                                                                                                    
    this_patient_tumour_only_positions <- NSCLC_pCSC_groups_to_run[[r]][[4]]                                                                                                                                                                
                                                                                                                                                                                                                                            
    # Generate graphs                                                                                                                                                                                                                       
    NSCLC_all_results_ranks_list[[r]] <- print_preferential_expression_bar_graphs(                                                                                                                                                          
        pCSC_group_name                    <- this_pCSC_group_name,                                                                                                                                                                         
        pCSC_group_positions               <- pCSC_group_pos,                                                                                                                                                                               
        HUGO_groups_sets_of_columnNumbers  <- gene_group_positions_to_use,                                                                                                                                                                  
        tExprMatr                          <- expression_matrix,                                                                                                                                                                            
        tumour_only_positions              <- NSCLC_45000_tumour_only_positions,                                                                                                                                                            
        this_patient_tumour_only_positions,                                                                                                                                                                                                 
        outDir,                                                                                                                                                                                                                             
        tissue_type,                                                                                                                                                                                                                        
        family_type_name                   <- 'HUGO',                                                                                                                                                                                       
        patient_source_name                <- this_sample_name,                                                                                                                                                                             
        frag_count_method,                                                                                                                                                                                                                  
        no_ribo,                                                                                                                                                                                                                            
        separate_row_for_high_expression_transcripts,                                                                                                                                                                                       
        max_number_of_graph_rows_stacked_transcripts <- 2,                                                                                                                                                                                  
        max_number_of_graph_rows_stacked_families <- 2,                                                                                                                                                                                     
        all_HUGO_abbreviations_and_fullnames,                                                                                                                                                                                               
        dataDir                                                                                                                                                                                                                             
    )                                                                                                                                                                                                                                       
    names(NSCLC_all_results_ranks_list)[[r]] <- this_pCSC_group_name                                                                                                                                                                        
}                                                                                                                                                                                                                                           
q()
tCounts_NSCLC_1_15000
tCounts_NSCLC_45000
 getGenesAndFullNamesDF, getGenesFullNames,
    print_preferential_expression_bar_graphs,
    printBarchartSingleTranscriptNoStacking,
    printTripletSingleTranscriptBarcharts,
    stackedBarchartsForSingleTranscripts,
    stackedFamilyExpressionBarchartSingleBars, tCounts_NSCLC_1_15000,
    tCounts_NSCLC_15001_30000, tCounts_NSCLC_30001_45000
getGenesAndFullNamesDF
getGenesAndFullNamesDF <- NULL
getGenesFullNames <- NULL
print_preferential_expression_bar_graphs <- NULL
printBarchartSingleTranscriptNoStacking <- NULL
printTripletSingleTranscriptBarcharts <- NULL
stackedBarchartsForSingleTranscripts <- NULL
stackedFamilyExpressionBarchartSingleBars <- NULL
tCounts_NSCLC_1_15000
tCounts_NSCLC_1_15000
tCounts_NSCLC_15001_30000 
tCounts_NSCLC_30001_45000
q()
library("cscplots")                                                                                                                                                                                                                         
tCounts_NSCLC_1_15000
library("Matrix")                                                                                                                                                                                                                           
library("biomaRt")                                                                                                                                                                                                                          
library("gtools")                                                                                                                                                                                                                           
library("Rtsne")                                                                                                                                                                                                                            
library("caret")                                                                                                                                                                                                                            
library("ranger")                                                                                                                                                                                                                           
library("e1071")                                                                                                                                                                                                                            
library("randomForest")                                                                                                                                                                                                                     
library("ggplot2")                                                                                                                                                                                                                          
library("ggrepel"); options(ggrepel.max.overlaps = Inf)                                                                                                                                                                                     
library("cscplots")                                                                                                                                                                                                                         
                                                                                                                                                                                                                                            
project_name <- "NSCLC_45000"                                                                                                                                                                                                               
wd           <- './' # set the working directory                                                                                                                                                                                            
saveDir      <- paste0(wd, 'save/')                                                                                                                                                                                                         
resultsDir   <- paste0('results/', project_name, '/')                                                                                                                                                                                       
tSNEsDir     <- paste0(resultsDir, 'tSNEs/')                                                                                                                                                                                                
pCSCsDir     <- paste0(tSNEsDir, "pCSC_group_selection/")                                                                                                                                                                                   
prefExprDir  <- paste0(resultsDir, "preferential_expression/")                                                                                                                                                                              
dataDir      <- paste0(wd, '../data/')                                                                                                                                                                                                      
dir.create(saveDir, showWarnings = FALSE)                                                                                                                                                                                                   
dir.create(resultsDir, showWarnings = FALSE)                                                                                                                                                                                                
dir.create(tSNEsDir, showWarnings = FALSE)                                                                                                                                                                                                  
dir.create(pCSCsDir, showWarnings = FALSE)                                                                                                                                                                                                  
dir.create(prefExprDir, showWarnings = FALSE)                                                                                                                                                                                               
dir.create(dataDir, showWarnings = FALSE)                                                                                                                                                                                                   
                                                                                                                                                                                                                                            
load("../data/tCounts_NSCLC_45000.RData") # Need genes on the top                                                                                                                                                                          
load("../data/bac/tCounts_NSCLC_45000.RData") # Need genes on the top                                                                                                                                                                          
number_of_genes_to_use <- 16000                                                                                                                                                                                                             
Sys.time()                                                                                                                                                                                                                                  
NSCLC_cell_malignancy_prediction_DFs_lists[[2]] <- run_ML_cellType_predictors(model_type <- 'ranger', NSCLC_tCounts_list, cellTypeData <- tTPM_mela_4558_with_cell_malignancy,                                                              
                                                                              expressionData_type <- 'mela_cell_malignancy', number_of_genes_to_use, sample_data_type <- 'counts', resultsDir)                                              
number_of_genes_to_use <- 16000                                                                                                                                                                                                             
Sys.time()                                                                                                                                                                                                                                  
NSCLC_cell_malignancy_prediction_DFs_lists[[2]] <- run_ML_cellType_predictors(model_type <- 'ranger', NSCLC_tCounts_list, cellTypeData <- tTPM_mela_4558_with_cell_malignancy,                                                              
                                                                              expressionData_type <- 'mela_cell_malignancy', number_of_genes_to_use, sample_data_type <- 'counts', resultsDir)                                              
str(NSCLC_cell_malignancy_prediction_DFs_lists)
save(NSCLC_cell_malignancy_prediction_DFs_lists, file = paste0(saveDir, "NSCLC_cell_malignancy_prediction_DFs_lists.RData"))                                                                                                                
q()
